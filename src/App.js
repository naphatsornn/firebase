import React, { useState, useEffect } from "react";
import { registerUser, loginUser, logoutUser, saveContact, getContactByPhone } from "./firebase";
import { getAuth, onAuthStateChanged } from "firebase/auth";

function App() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [user, setUser] = useState(null);

  const [name, setName] = useState("");
  const [phone, setPhone] = useState("");
  const [searchPhone, setSearchPhone] = useState("");
  const [foundName, setFoundName] = useState("");

  const [accessToken, setAccessToken] = useState("");

  // тЬЕ р╣Вр╕лр╕ер╕Ф accessToken р╕Ир╕▓р╕Б global variable р╕Чр╕╡р╣Ир╕Эр╕▒р╕Зр╕бр╕▓р╕Ир╕▓р╕Б server
  useEffect(() => {
    const token = window.accessToken || "";
    setAccessToken(token);
    console.log("Access Token from header:", token);
  }, []);

  // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓ User Login р╕нр╕вр╕╣р╣Ир╕лр╕гр╕╖р╕нр╣Др╕бр╣И
  const auth = getAuth();
  onAuthStateChanged(auth, (currentUser) => {
    setUser(currentUser);
  });

  const handleRegister = () => {
    registerUser(email, password);
  };

  const handleLogin = () => {
    loginUser(email, password);
  };

  const handleLogout = () => {
    logoutUser();
  };

  const handleSaveContact = () => {
    if (user) {
      saveContact(user.uid, name, phone);
      setName("");
      setPhone("");
    } else {
      alert("р╕Бр╕гр╕╕р╕Ур╕▓р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╕Бр╣Ир╕нр╕Щ");
    }
  };

  const handleSearchContact = async () => {
    if (user) {
      const result = await getContactByPhone(user.uid, searchPhone);
      setFoundName(result);
    } else {
      alert("р╕Бр╕гр╕╕р╕Ур╕▓р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╕Бр╣Ир╕нр╕Щ");
    }
  };

  return (
    <div style={{ textAlign: "center", padding: "20px" }}>
      <h2>ЁЯФР р╕гр╕░р╕Ър╕Ър╕ер╣Зр╕нр╕Бр╕нр╕┤р╕Щ</h2>
      <p>ЁЯЯв Access Token: <code>{accessToken}</code></p>

      <input type="email" placeholder="р╕нр╕╡р╣Ар╕бр╕е" value={email} onChange={(e) => setEmail(e.target.value)} />
      <input type="password" placeholder="р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ" value={password} onChange={(e) => setPassword(e.target.value)} />
      <br />
      <button onClick={handleRegister}>р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б</button>
      <button onClick={handleLogin}>р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ</button>
      <button onClick={handleLogout}>р╕нр╕нр╕Бр╕Ир╕▓р╕Бр╕гр╕░р╕Ър╕Ъ</button>

      {user && (
        <>
          <h2>ЁЯУЮ р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╣Ар╕Ър╕нр╕гр╣Мр╣Вр╕Чр╕г</h2>
          <input type="text" placeholder="р╕Кр╕╖р╣Ир╕н" value={name} onChange={(e) => setName(e.target.value)} />
          <input type="text" placeholder="р╣Ар╕Ър╕нр╕гр╣Мр╣Вр╕Чр╕г" value={phone} onChange={(e) => setPhone(e.target.value)} />
          <button onClick={handleSaveContact}>р╕Ър╕▒р╕Щр╕Чр╕╢р╕Б</button>

          <h2>ЁЯФН р╕Др╣Йр╕Щр╕лр╕▓р╕Кр╕╖р╣Ир╕нр╕Ир╕▓р╕Бр╣Ар╕Ър╕нр╕гр╣М</h2>
          <input type="text" placeholder="р╕Бр╕гр╕нр╕Бр╣Ар╕Ър╕нр╕гр╣Мр╣Вр╕Чр╕г" value={searchPhone} onChange={(e) => setSearchPhone(e.target.value)} />
          <button onClick={handleSearchContact}>р╕Др╣Йр╕Щр╕лр╕▓</button>

          {foundName && <h3>ЁЯУМ р╕Кр╕╖р╣Ир╕нр╕Чр╕╡р╣Ир╕Юр╕Ъ: {foundName}</h3>}
        </>
      )}
    </div>
  );
}

export default App;
